import { AsyncLocalStorage } from 'node:async_hooks';
export class AsyncLocalStorageStrategy {
    _storage = new AsyncLocalStorage();
    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-parameters
    get(key) {
        const store = this._storage.getStore();
        this._throwErrorIfInactiveContext(store);
        return store.get(key);
    }
    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-parameters
    set(key, value) {
        const store = this._storage.getStore();
        this._throwErrorIfInactiveContext(store);
        store.set(key, value);
    }
    clear(key) {
        const store = this._storage.getStore();
        this._throwErrorIfInactiveContext(store);
        store.delete(key);
    }
    createSession(callback, options) {
        const { defaultValue = {} } = options ?? {};
        const store = new Map(Object.entries(defaultValue));
        this._storage.run(store, callback);
    }
    _throwErrorIfInactiveContext(store) {
        if (!store) {
            throw new Error('No active session found');
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXN5bmMtbG9jYWwtc3RvcmFnZS1zdHJhdGVneS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zZXNzaW9uLXN0cmF0ZWd5L2FzeW5jLWxvY2FsLXN0b3JhZ2Utc3RyYXRlZ3kudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sa0JBQWtCLENBQUE7QUFJcEQsTUFBTSxPQUFPLHlCQUF5QjtJQUNsQixRQUFRLEdBQUcsSUFBSSxpQkFBaUIsRUFBd0IsQ0FBQTtJQUUzRSw2RUFBNkU7SUFDN0UsR0FBRyxDQUFJLEdBQVc7UUFDakIsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQTtRQUN0QyxJQUFJLENBQUMsNEJBQTRCLENBQUMsS0FBSyxDQUFDLENBQUE7UUFFeEMsT0FBTyxLQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBa0IsQ0FBQTtJQUN4QyxDQUFDO0lBRUQsNkVBQTZFO0lBQzdFLEdBQUcsQ0FBSSxHQUFXLEVBQUUsS0FBUTtRQUMzQixNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxDQUFBO1FBQ3RDLElBQUksQ0FBQyw0QkFBNEIsQ0FBQyxLQUFLLENBQUMsQ0FBQTtRQUN4QyxLQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQTtJQUN2QixDQUFDO0lBRUQsS0FBSyxDQUFDLEdBQVc7UUFDaEIsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQTtRQUN0QyxJQUFJLENBQUMsNEJBQTRCLENBQUMsS0FBSyxDQUFDLENBQUE7UUFDeEMsS0FBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQTtJQUNuQixDQUFDO0lBRUQsYUFBYSxDQUFDLFFBQW9CLEVBQUUsT0FBOEI7UUFDakUsTUFBTSxFQUFFLFlBQVksR0FBRyxFQUFFLEVBQUUsR0FBRyxPQUFPLElBQUksRUFBRSxDQUFBO1FBQzNDLE1BQU0sS0FBSyxHQUFHLElBQUksR0FBRyxDQUFrQixNQUFNLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUE7UUFDcEUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFBO0lBQ25DLENBQUM7SUFFUyw0QkFBNEIsQ0FBQyxLQUE0QjtRQUNsRSxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDWixNQUFNLElBQUksS0FBSyxDQUFDLHlCQUF5QixDQUFDLENBQUE7UUFDM0MsQ0FBQztJQUNGLENBQUM7Q0FDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFzeW5jTG9jYWxTdG9yYWdlIH0gZnJvbSAnbm9kZTphc3luY19ob29rcydcblxuaW1wb3J0IHsgdHlwZSBDcmVhdGVTZXNzaW9uT3B0aW9ucywgdHlwZSBTZXNzaW9uU3RyYXRlZ3kgfSBmcm9tICcjc3JjL3Nlc3Npb24tc3RyYXRlZ3kvc2Vzc2lvbi1zdHJhdGVneSdcblxuZXhwb3J0IGNsYXNzIEFzeW5jTG9jYWxTdG9yYWdlU3RyYXRlZ3kgaW1wbGVtZW50cyBTZXNzaW9uU3RyYXRlZ3kge1xuXHRwcm90ZWN0ZWQgcmVhZG9ubHkgX3N0b3JhZ2UgPSBuZXcgQXN5bmNMb2NhbFN0b3JhZ2U8TWFwPHN0cmluZywgdW5rbm93bj4+KClcblxuXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVubmVjZXNzYXJ5LXR5cGUtcGFyYW1ldGVyc1xuXHRnZXQ8VD4oa2V5OiBzdHJpbmcpOiBUIHwgdW5kZWZpbmVkIHtcblx0XHRjb25zdCBzdG9yZSA9IHRoaXMuX3N0b3JhZ2UuZ2V0U3RvcmUoKVxuXHRcdHRoaXMuX3Rocm93RXJyb3JJZkluYWN0aXZlQ29udGV4dChzdG9yZSlcblxuXHRcdHJldHVybiBzdG9yZSEuZ2V0KGtleSkgYXMgVCB8IHVuZGVmaW5lZFxuXHR9XG5cblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bm5lY2Vzc2FyeS10eXBlLXBhcmFtZXRlcnNcblx0c2V0PFQ+KGtleTogc3RyaW5nLCB2YWx1ZTogVCk6IHZvaWQge1xuXHRcdGNvbnN0IHN0b3JlID0gdGhpcy5fc3RvcmFnZS5nZXRTdG9yZSgpXG5cdFx0dGhpcy5fdGhyb3dFcnJvcklmSW5hY3RpdmVDb250ZXh0KHN0b3JlKVxuXHRcdHN0b3JlIS5zZXQoa2V5LCB2YWx1ZSlcblx0fVxuXG5cdGNsZWFyKGtleTogc3RyaW5nKTogdm9pZCB7XG5cdFx0Y29uc3Qgc3RvcmUgPSB0aGlzLl9zdG9yYWdlLmdldFN0b3JlKClcblx0XHR0aGlzLl90aHJvd0Vycm9ySWZJbmFjdGl2ZUNvbnRleHQoc3RvcmUpXG5cdFx0c3RvcmUhLmRlbGV0ZShrZXkpXG5cdH1cblxuXHRjcmVhdGVTZXNzaW9uKGNhbGxiYWNrOiAoKSA9PiB2b2lkLCBvcHRpb25zPzogQ3JlYXRlU2Vzc2lvbk9wdGlvbnMpOiB2b2lkIHtcblx0XHRjb25zdCB7IGRlZmF1bHRWYWx1ZSA9IHt9IH0gPSBvcHRpb25zID8/IHt9XG5cdFx0Y29uc3Qgc3RvcmUgPSBuZXcgTWFwPHN0cmluZywgdW5rbm93bj4oT2JqZWN0LmVudHJpZXMoZGVmYXVsdFZhbHVlKSlcblx0XHR0aGlzLl9zdG9yYWdlLnJ1bihzdG9yZSwgY2FsbGJhY2spXG5cdH1cblxuXHRwcm90ZWN0ZWQgX3Rocm93RXJyb3JJZkluYWN0aXZlQ29udGV4dChzdG9yZT86IE1hcDxzdHJpbmcsIHVua25vd24+KTogdm9pZCB7XG5cdFx0aWYgKCFzdG9yZSkge1xuXHRcdFx0dGhyb3cgbmV3IEVycm9yKCdObyBhY3RpdmUgc2Vzc2lvbiBmb3VuZCcpXG5cdFx0fVxuXHR9XG59XG4iXX0=